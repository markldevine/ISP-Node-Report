#!/usr/bin/env raku

#use lib '/home/mdevine/github.com/ISP-dsmadmc/lib';
#use lib '/home/mdevine/github.com/raku-Our-Grid/lib';
#use lib '/home/mdevine/github.com/raku-Our-Cache/lib';

use ISP::dsmadmc;
use Our::Grid;
use Our::Utilities;
use Data::Dump::Tree;
#use Grammar::Debugger;

my Our::Grid    $grid;
my              %nodes;
my              %policy;
my              @sql;
my Int          $summary-retention;

sub MAIN (
#   Str:D   :$isp-node-name                     = 'AIXTEST',    #= ISP client name (SELECT NODE_NAME FROM NODES)
    Str:D   :$isp-server                        = 'ISPLC01',    #= ISP server name (SELECT SERVER_NAME FROM STATUS)
    Str:D   :$isp-admin                         = 'A028441',    #= ISP server Admin account
    Int:D   :$window-hour   where 0 <= * <= 24  = 15,           #= Daily backup window hour
    Bool    :$data-cache                        = True,         #= Read 'data' from cache
    Bool    :$report-cache                      = False,        #= Read 'report' from cache
) {
#   if $report-cache, just pull the last finalized report...

    $grid      .= new;
    $grid.title('ISP Node Summary');
    $grid.add-heading: 'Node',                                                                              :bold,  :justification<left>;
    $grid.add-heading:  :cell(
                            Our::Grid::Cell.new(
                                :fragments(
                                    Our::Grid::Cell::Fragment.new(:text('Files' ~ ouc-superscript-minus),   :bold),
                                    Our::Grid::Cell::Fragment.new(:text('1'),                               :bold,  :superscript),
                                ),                                                                          :justification<right>,
                            )
                        );
    $grid.add-heading:  :cell(
                            Our::Grid::Cell.new(
                                :fragments(
                                    Our::Grid::Cell::Fragment.new(:text('Size' ~ ouc-superscript-minus),    :bold),
                                    Our::Grid::Cell::Fragment.new(:text('1'),                               :bold,  :superscript),
                                ),                                                                          :justification<right>,
                            )
                        );
    $grid.add-heading:  :cell(
                            Our::Grid::Cell.new(
                                :fragments(
                                    Our::Grid::Cell::Fragment.new(:text('Elapsed' ~ ouc-superscript-minus), :bold),
                                    Our::Grid::Cell::Fragment.new(:text('1'),                               :bold,  :superscript),
                                ),                                                                          :justification<right>,
                            )
                        );
    $grid.add-heading:  :cell(
                            Our::Grid::Cell.new(
                                :fragments(
                                    Our::Grid::Cell::Fragment.new(:text('Files' ~ ouc-superscript-minus),   :bold),
                                    Our::Grid::Cell::Fragment.new(:text('7'),                               :bold,  :superscript),
                                ),                                                                          :justification<right>,
                            )
                        );
    $grid.add-heading:  :cell(
                            Our::Grid::Cell.new(
                                :fragments(
                                    Our::Grid::Cell::Fragment.new(:text('Size' ~ ouc-superscript-minus),    :bold),
                                    Our::Grid::Cell::Fragment.new(:text('7'),                               :bold,  :superscript),
                                ),                                                                          :justification<right>,
                            )
                        );
    $grid.add-heading:  :cell(
                            Our::Grid::Cell.new(
                                :fragments(
                                    Our::Grid::Cell::Fragment.new(:text('Elapsed' ~ ouc-superscript-minus), :bold),
                                    Our::Grid::Cell::Fragment.new(:text('7'),                               :bold,  :superscript),
                                ),                                                                          :justification<right>,
                            )
                        );
    $grid.add-heading:  :cell(
                            Our::Grid::Cell.new(
                                :fragments(
                                    Our::Grid::Cell::Fragment.new(:text('Files' ~ ouc-superscript-minus),   :bold),
                                    Our::Grid::Cell::Fragment.new(:text('30'),                              :bold,  :superscript),
                                ),                                                                          :justification<right>,
                            )
                        );
    $grid.add-heading:  :cell(
                            Our::Grid::Cell.new(
                                :fragments(
                                    Our::Grid::Cell::Fragment.new(:text('Size' ~ ouc-superscript-minus),    :bold),
                                    Our::Grid::Cell::Fragment.new(:text('30'),                              :bold,  :superscript),
                                ),                                                                          :justification<right>,
                            )
                        );
    $grid.add-heading:  :cell(
                            Our::Grid::Cell.new(
                                :fragments(
                                    Our::Grid::Cell::Fragment.new(:text('Elapsed' ~ ouc-superscript-minus), :bold),
                                    Our::Grid::Cell::Fragment.new(:text('30'),                              :bold,  :superscript),
                                ),                                                                          :justification<right>,
                            )
                        );
    $grid.add-heading: 'Change Rate'        ~ ouc-superscript-H,                                            :bold,  :justification<right>;
    $grid.add-heading: 'Backup Size'        ~ ouc-superscript-H,                                            :bold,  :justification<right>;
    $grid.add-heading: 'Backup Duration'    ~ ouc-superscript-H,                                            :bold,  :justification<right>;

    $grid.add-heading: 'File Space',                                                                        :bold,  :justification<right>;
    $grid.add-heading: 'Retention',                                                                         :bold,  :justification<right>;
    $grid.add-heading: 'Files Protected',                                                                   :bold,  :justification<right>;
    $grid.add-heading: 'Back-End Storage',                                                                  :bold,  :justification<right>;

    my ISP::dsmadmc $dsmadmc   .= new(:$isp-server, :$isp-admin, :cache($data-cache));

    @sql = 'select', 'SUMMARYRETENTION', 'from', 'STATUS';
    for $dsmadmc.execute(@sql, :expire-after(DateTime.new(now + (24 * 60 * 60)))) -> $record {
        $summary-retention  = $record.values.tail.Int;
    }

    @sql =
        'select', 'DOMAIN_NAME,CLASS_NAME,DESTINATION,RETEXTRA,RETONLY',
        'from', 'BU_COPYGROUPS',
        'where', "SET_NAME='ACTIVE'",
        'order', 'by', 'DOMAIN_NAME';

    for $dsmadmc.execute(@sql, :expire-after(DateTime.new(now + (24 * 60 * 60)))) -> $record {
        %policy<DOMAIN_NAME>{$record<DOMAIN_NAME>}<CLASS_NAME>{$record<CLASS_NAME>}<DESTINATION>    = $record<DESTINATION>;
        note $record<CLASS_NAME> unless $record<RETEXTRA> eq $record<RETONLY>;
        %policy<DOMAIN_NAME>{$record<DOMAIN_NAME>}<CLASS_NAME>{$record<CLASS_NAME>}<RETENTION>      = $record<RETEXTRA>;
    }

#   DFS => {1} @10
#       CLASS_NAME => {3} @11
#           DC => {2} @12
#               DESTINATION => DFS_DC.Str
#               RETENTION => 180   .Str
#           STANDARD => {2} @13
#               DESTINATION => DFS_DC.Str
#               RETENTION => 731   .Str
#           TGV => {2} @14
#               DESTINATION => DFS_DC.Str
#               RETENTION => 1830  .Str

    @sql = 'select', 'DOMAIN_NAME,NODE_NAME', 'from', 'NODES';
    for $dsmadmc.execute(@sql, :expire-after(DateTime.new(now + (24 * 60 * 60)))) -> $record {
        %nodes{$record<NODE_NAME>}<DOMAIN_NAME> = $record<DOMAIN_NAME>;
    }

#   AIXTEST => {1} @1
#       DOMAIN_NAME => BA.Str

put 'Node consumption...';
    @sql =  'select',
            'B.NODE_NAME,',
            'B.FILESPACE_NAME,',
            'B.CLASS_NAME,',
            'sum(BK.BFSIZE)', 'as', 'BYTES,',
            'count(BK.BFSIZE)', 'as', 'NUMBER_OF_OBJECTS',
            'from', 'BACKUPS B,', 'BACKUP_OBJECTS', 'BK',
            'where', 'B.OBJECT_ID=BK.OBJID',
            'and', "B.TYPE<>'DIR'",
            'group', 'by', 'B.NODE_NAME,', 'B.FILESPACE_NAME,', 'B.CLASS_NAME';
    for $dsmadmc.execute(@sql, :expire-after(DateTime.new(now + (24 * 60 * 60)))) -> $record {
        next unless $record<FILESPACE_NAME>;
        my $node-name = $record<NODE_NAME>;
        die 'NODE_NAME <' ~ $node-name ~ '> encountered in BACKUPS but not in NODES' unless %nodes{$node-name}:exists;
        %nodes{$node-name}<POLICY><FILESPACE_NAME>{$record<FILESPACE_NAME>}<CLASS_NAME>{$record<CLASS_NAME>}<BYTES>             = $record<BYTES>;
        %nodes{$node-name}<POLICY><FILESPACE_NAME>{$record<FILESPACE_NAME>}<CLASS_NAME>{$record<CLASS_NAME>}<NUMBER_OF_OBJECTS> = $record<NUMBER_OF_OBJECTS>;
    }

#   AIXTEST => {2} @1
#       DOMAIN_NAME => BA.Str
#       POLICY => {1} @2
#           FILESPACE_NAME => {9} @3
#               / => {1} @4
#                   CLASS_NAME => {1} @5
#                       DEFAULT => {2} @6
#                           BYTES => 2190667164.Str
#                           NUMBER_OF_OBJECTS => 20090.Str
#               /admin => {1} @7
#                   CLASS_NAME => {1} @8
#                       DEFAULT => {2} @9
#                           BYTES => 7582232576.Str
#                           NUMBER_OF_OBJECTS => 390.Str
#               /audit => {1} @10
#                   CLASS_NAME => {1} @11
#                       DEFAULT => {2} @12
#                           BYTES => 21629952.Str
#                           NUMBER_OF_OBJECTS => 4.Str
#               /home => {1} @13
#                   CLASS_NAME => {1} @14
#                       DEFAULT => {2} @15
#                           BYTES => 287307776.Str
#                           NUMBER_OF_OBJECTS => 10314.Str
#               /nmon => {1} @16
#                   CLASS_NAME => {1} @17
#                       DEFAULT => {2} @18
#                           BYTES => 5401223168.Str
#                           NUMBER_OF_OBJECTS => 603.Str
#               /opt => {1} @19
#                   CLASS_NAME => {1} @20
#                       DEFAULT => {2} @21
#                           BYTES => 24136881222.Str
#                           NUMBER_OF_OBJECTS => 36224.Str
#               /usr => {1} @22
#                   CLASS_NAME => {1} @23
#                       DEFAULT => {2} @24
#                           BYTES => 8890792514.Str
#                           NUMBER_OF_OBJECTS => 82325.Str
#               /var => {1} @25
#                   CLASS_NAME => {1} @26
#                       DEFAULT => {2} @27
#                           BYTES => 32309822100.Str
#                           NUMBER_OF_OBJECTS => 23781.Str
#               /wmata => {1} @28
#                   CLASS_NAME => {1} @29
#                       DEFAULT => {2} @30
#                           BYTES => 4564601856.Str
#                           NUMBER_OF_OBJECTS => 68.Str
#       SUMMARY => {1} @30
#           SCHEDULE => {1} @31
#               SCH_1500 => {4} @32
#                   AFFECTED => [307] @33
#                       0 = 348.Str
#                       1 = 264.Str
#                       2 = 292.Str
#                       3 = 307.Str
#                       4 = 1394.Str
#                       5 = 274.Str
#                       6 = 471.Str
#                       7 = 337.Str
#                       8 = 338.Str
#                       9 = 377.Str
#                       10 = 428.Str
#                   BYTES => [307] @34
#                       0 = 17869402.Str
#                       1 = 15572575.Str
#                       2 = 20260507.Str
#                       3 = 15960831.Str
#                       4 = 59618072.Str
#                       5 = 16519598.Str
#                       6 = 15943586.Str
#                       7 = 16653235.Str
#                       8 = 17058054.Str
#                       9 = 18418275.Str
#                       10 = 19958258.Str
#                   ELAPSED => [307] @35
#                       0 = 25   
#                       1 = 22   
#                       2 = 20   
#                       3 = 22   
#                       4 = 28   
#                       5 = 19   
#                       6 = 25   
#                       7 = 21   
#                       8 = 24   
#                       9 = 27   
#                       10 = 86   
#                   EXAMINED => [307] @36
#                       0 = 141293.Str
#                       1 = 141286.Str
#                       2 = 141283.Str
#                       3 = 141317.Str
#                       4 = 141339.Str
#                       5 = 141312.Str
#                       6 = 141302.Str
#                       7 = 141294.Str
#                       8 = 141289.Str
#                       9 = 141289.Str
#                       10 = 141287.Str


put 'Summary...';
    my $today           = DateTime.new(now);
    my DateTime $start-date-time;
    my DateTime $end-date-time  = DateTime.new(:year($today.year), :month($today.month), :day($today.day), :hour($window-hour), :0minute, :0second);
    $start-date-time = DateTime.new: $end-date-time - ($summary-retention * (24 * 60 * 60));
    @sql =  'select', 'AFFECTED,BYTES,END_TIME,ENTITY,EXAMINED,SCHEDULE_NAME,START_TIME',
            'from', 'SUMMARY',
            'where', "ACTIVITY='BACKUP'",
            'and', 'START_TIME>=' ~ "'" ~
            DateTime.new($start-date-time.Numeric, :formatter({sprintf "%04d-%02d-%02d %02d:%02d:%02d", .year, .month, .day, .hour, .minute, .second})).Str ~ "'",
            'and', 'START_TIME<=' ~ "'" ~
            DateTime.new($end-date-time.Numeric,   :formatter({sprintf "%04d-%02d-%02d %02d:%02d:%02d", .year, .month, .day, .hour, .minute, .second})).Str ~ "'",
#%%% 'and', 'ENTITY=' ~ "'AIXTEST'";
            'order', 'by', 'ENTITY';

#   AFFECTED => 287
#   BYTES => 19060591.Str
#   END_TIME => .DateTime @1
#       $.hour = 15   
#       $.minute = 29   
#       $.second = 47   
#       $.timezone = -14400   
#       $.year = 2023   
#       $.month = 9   
#       $.day = 14   
#       $.daycount = 0   
#       &.formatter = Nil
#   ENTITY => AIXTEST.Str
#   EXAMINED => 134046.Str
#   START_TIME => .DateTime @2
#       $.hour = 15   
#       $.minute = 29   
#       $.second = 23   
#       $.timezone = -14400   
#       $.year = 2023   
#       $.month = 9   
#       $.day = 14   
#       $.daycount = 0   
#       &.formatter = Nil

#   my $anon-count              = 1;
    for $dsmadmc.execute(@sql, :expire-after(DateTime.new(now + (24 * 60 * 60)))) -> $record {
        my $node-name = $record<ENTITY>;
#next unless $node-name eq 'AIXTEST';
        my $schedule-name       = $record<SCHEDULE_NAME>;
        next                    unless $schedule-name;
#       $schedule-name          = 'ANON' ~ $anon-count++ unless $schedule-name;
        die 'ENTITY <' ~ $node-name ~ '> encountered in SUMMARY but not in NODES' unless %nodes{$node-name}:exists;
        my $affected            = $record<AFFECTED>;
        my $bytes               = $record<BYTES>;
        my $end-time            = $record<END_TIME>;
        my $examined            = $record<EXAMINED>;
        my $start-time          = $record<START_TIME>;
        my $elapsed-seconds     = $end-time.posix - $start-time.posix;
        %nodes{$node-name}<SUMMARY><SCHEDULE>{$schedule-name}<AFFECTED>.unshift($affected);
        %nodes{$node-name}<SUMMARY><SCHEDULE>{$schedule-name}<BYTES>.unshift($bytes);
        %nodes{$node-name}<SUMMARY><SCHEDULE>{$schedule-name}<EXAMINED>.unshift($examined);
        %nodes{$node-name}<SUMMARY><SCHEDULE>{$schedule-name}<ELAPSED>.unshift($elapsed-seconds);
    }
ddt %nodes<AIXTEST>;
die;

##  my @fragments  = ();
##  @fragments.push: Our::Grid::Cell::Fragment.new(:text('AIXTEST' ~ ouc-superscript-lparen),   :bold);
##  @fragments.push: Our::Grid::Cell::Fragment.new(:text('90'),                                 :bold, :superscript);
##  @fragments.push: Our::Grid::Cell::Fragment.new(:text(ouc-superscript-rparen),               :bold);
##  $grid.add-cell: :cell(Our::Grid::Cell.new(:@fragments,                                      :justification<left>));

#   AIXTEST => {2} @1
#       DOMAIN_NAME => BA.Str
#       POLICY => {1} @2
#           FILESPACE_NAME => {9} @3
#               / => {1} @4
#                   CLASS_NAME => {1} @5
#                       DEFAULT => {2} @6
#                           BYTES => 2190667164.Str
#                           NUMBER_OF_OBJECTS => 20090.Str
#               /admin => {1} @7
#                   CLASS_NAME => {1} @8
#                       DEFAULT => {2} @9
#                           BYTES => 7582232576.Str
#                           NUMBER_OF_OBJECTS => 390.Str
#       SUMMARY => {1} @30
#           SCHEDULE => {1} @31
#               SCH_1500 => {4} @32
#                   AFFECTED => [307] @33
#                       0 = 348.Str

    for %nodes.keys -> $node-name {
$grid.add-cell: $node-name,                                                                  :justification<left>;
        my $domain-name         = %nodes{$node-name}<DOMAIN_NAME>;
        my $files-1;
        my $size-1;
        my $elapsed-1;
        my $files-7;
        my $size-7;
        my $elapsed-7;
        my $files-30;
        my $size-30;
        my $elapsed-30;
        for %nodes{$node-name}<SUMMARY><SCHEDULE>.keys -> $schedule {
            $files-1            = 0;
            $size-1             = 0;
            $elapsed-1          = 0;
            $files-7            = 0;
            $size-7             = 0;
            $elapsed-7          = 0;
            $files-30           = 0;
            $size-30            = 0;
            $elapsed-30         = 0;
        }
$grid.add-cell: $files-1,                                                                   :justification<right>,  :foreground<white>, :highlight(15, 79, 52),     :background(15, 79, 52);
$grid.add-cell: $size-1,                                                                    :justification<right>,  :foreground<white>, :highlight(15, 79, 52),     :background(15, 79, 52);
$grid.add-cell: $elapsed-1,                                                                 :justification<right>,  :foreground<white>, :highlight(15, 79, 52),     :background(15, 79, 52);
$grid.add-cell: $files-7,                                                                   :justification<right>,  :foreground<white>, :highlight(4,102,69),       :background(4,102,69);
$grid.add-cell: $size-7,                                                                    :justification<right>,  :foreground<white>, :highlight(4,102,69),       :background(4,102,69);
$grid.add-cell: $elapsed-7,                                                                 :justification<right>,  :foreground<white>, :highlight(4,102,69),       :background(4,102,69);
$grid.add-cell: $files-30,                                                                  :justification<right>,  :foreground<white>, :highlight(6, 122, 82),     :background(6, 122, 82);
$grid.add-cell: $size-30,                                                                   :justification<right>,  :foreground<white>, :highlight(6, 122, 82),     :background(6, 122, 82);
$grid.add-cell: $elapsed-30,                                                                :justification<right>,  :foreground<white>, :highlight(6, 122, 82),     :background(6, 122, 82);

$grid.add-cell: '101%',                                                                       :justification<right>,  :foreground<black>, :highlight(0, 160, 100),    :background(0, 160, 100);
$grid.add-cell: '99XB',                                                                       :justification<right>,  :foreground<black>, :highlight(0, 160, 100),    :background(0, 160, 100);
$grid.add-cell: '23:59:59',                                                                 :justification<right>,  :foreground<black>, :highlight(0, 160, 100),    :background(0, 160, 100);

        for %nodes{$node-name}<POLICY><FILESPACE_NAME>.keys -> $filespace {
$grid.add-cell: $filespace,                                                                 :justification<right>,  :foreground<black>, :highlight(135, 233, 169),  :background(135, 233, 169);
            my $retention       = %policy<DOMAIN_NAME>{$record<DOMAIN_NAME>}<CLASS_NAME>{                   }<RETENTION>
$grid.add-cell: '90',                                                                       :justification<right>,  :foreground<black>, :highlight(135, 233, 169),  :background(135, 233, 169);
$grid.add-cell: '1500',                                                                     :justification<right>,  :foreground<black>, :highlight(135, 233, 169),  :background(135, 233, 169);
$grid.add-cell: '25000',                                                                    :justification<right>,  :foreground<black>, :highlight(135, 233, 169),  :background(135, 233, 169);


        $grid.current-row++;
    }

    $grid.TEXT-print;
}

=finish
